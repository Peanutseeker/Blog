---
import BaseHead from '../components/BaseHead.astro';
import Navigation from '../components/Navigation.astro';
import Footer from '../components/Footer.astro';
import ArrowButton from '../components/ArrowButton.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import { getCollection } from 'astro:content';

// Get recent posts for the homepage
const posts = (await getCollection('posts'))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 3);

// Mock featured work data (you can replace this with actual data)
const featuredWork = [
  {
    title: "AI Research Project",
    date: "2025/07/25",
    description: "A comprehensive study on transformer architectures",
    type: "research"
  },
  {
    title: "Deep Learning Framework",
    date: "2025/07/20", 
    description: "Custom PyTorch implementation for vision tasks",
    type: "project"
  }
];
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<Navigation currentPath="/" />
		
		<main class="homepage">
			<section class="hero-section">
				<div class="hero-content">
					<h1 class="hero-title">Howard's Blog</h1>
					<p class="hero-description">
						AI Student at Shanghai Jiao Tong University sharing insights on deep learning, PyTorch, and academic research.
					</p>
				</div>
			</section>

			<section class="content-sections">
				<div class="section-header">
					<ArrowButton text="Recents" variant="primary" size="large" href="/blog/" />
				</div>
				
				<div class="posts-grid">
					{posts.map((post) => (
						<article class="post-card">
							<div class="post-meta">
								<time class="post-date">{post.data.pubDate.toLocaleDateString()}</time>
							</div>
							<h3 class="post-title">
								<a href={`/blog/${post.id}/`}>{post.data.title}</a>
							</h3>
							<p class="post-description">{post.data.description}</p>
							<a href={`/blog/${post.id}/`} class="post-link">
								<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
									<path d="M7 17L17 7M17 7H7M17 7V17" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
								</svg>
							</a>
						</article>
					))}
				</div>

				<div class="section-header">
					<ArrowButton text="Featured work" variant="primary" size="large" />
				</div>
				
				<div class="posts-grid">
					{featuredWork.map((work) => (
						<article class="post-card">
							<div class="post-meta">
								<time class="post-date">{work.date}</time>
							</div>
							<h3 class="post-title">{work.title}</h3>
							<p class="post-description">{work.description}</p>
							<a href="/work/" class="post-link">
								<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
									<path d="M7 17L17 7M17 7H7M17 7V17" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
								</svg>
							</a>
						</article>
					))}
				</div>
			</section>
		</main>
		
		<Footer />
	</body>
</html>

<style>
	.homepage {
		padding: 0;
		width: 100%;
		max-width: none;
	}

	.hero-section {
		background: var(--hero-gradient);
		padding: 4rem 2rem;
		text-align: center;
		border-bottom: 1px solid rgba(139, 92, 246, 0.1);
	}

	.hero-content {
		max-width: 800px;
		margin: 0 auto;
	}

	.hero-title {
		font-size: 3rem;
		font-weight: 700;
		color: rgb(var(--gray-dark));
		margin-bottom: 1rem;
		background: var(--purple-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-clip: text;
	}

	.hero-description {
		font-size: 1.25rem;
		color: rgb(var(--gray));
		max-width: 600px;
		margin: 0 auto;
		line-height: 1.6;
	}

	.content-sections {
		max-width: 1200px;
		margin: 0 auto;
		padding: 4rem 2rem;
	}

	.section-header {
		display: flex;
		justify-content: center;
		margin: 3rem 0 2rem 0;
	}

	.posts-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
		gap: 2rem;
		margin-bottom: 4rem;
	}

	.post-card {
		background: white;
		border-radius: 16px;
		padding: 2rem;
		box-shadow: var(--box-shadow);
		transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
		position: relative;
		border: 1px solid rgba(139, 92, 246, 0.1);
	}

	.post-card:hover {
		transform: translateY(-4px);
		box-shadow: var(--box-shadow-lg);
		border-color: rgba(139, 92, 246, 0.2);
	}

	.post-meta {
		display: flex;
		align-items: center;
		margin-bottom: 1rem;
	}

	.post-date {
		color: rgb(var(--gray));
		font-size: 0.875rem;
		font-weight: 500;
	}

	.post-title {
		font-size: 1.5rem;
		font-weight: 600;
		margin-bottom: 1rem;
		color: rgb(var(--gray-dark));
	}

	.post-title a {
		text-decoration: none;
		color: inherit;
		transition: color 0.3s ease;
	}

	.post-title a:hover {
		color: var(--accent);
	}

	.post-description {
		color: rgb(var(--gray));
		line-height: 1.6;
		margin-bottom: 1.5rem;
	}

	.post-link {
		position: absolute;
		bottom: 2rem;
		right: 2rem;
		width: 40px;
		height: 40px;
		background: var(--purple-gradient);
		color: white;
		border-radius: 50%;
		display: flex;
		align-items: center;
		justify-content: center;
		text-decoration: none;
		transition: all 0.3s ease;
	}

	.post-link:hover {
		transform: scale(1.1);
		box-shadow: var(--glow-shadow);
	}

	/* Responsive design */
	@media (max-width: 768px) {
		.hero-section {
			padding: 3rem 1rem;
		}

		.hero-title {
			font-size: 2.5rem;
		}

		.hero-description {
			font-size: 1.125rem;
		}

		.content-sections {
			padding: 3rem 1rem;
		}

		.posts-grid {
			grid-template-columns: 1fr;
			gap: 1.5rem;
		}

		.post-card {
			padding: 1.5rem;
		}
	}
</style>
